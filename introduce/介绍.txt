整个AI的调整是在Dify平台上完成的
图片1.jpg
目前我们调用的AI：
	接受输入：文本
	输出：文本、图片、音频
		（在本地只能输出文本，需要程序讲文本调整成其他格式）
文本处理调用ds，图片处理调用硅基流动，音频处理调用fishaudio

main.py   gui.py   apiclient.py
目前的三个py文件，分别为主文件、绘制UI、调用API，

background.jpg 目前试用的背景图片

调用API方式：
硬编码、环境配置获取API key，硬编码base url。这份代码的鲁棒性还算🆗，如果没有获取到会让你自己输入一份key。
注意：输入内容均为文本，但是Dify平台输出的内容是文件files的时候实际上返回的是文件名称和一个网址，Dify平台会自动调取这样的网站 输出文件，但是本地不行，所以我的处理是：在需要输出文件的时候先输出一个提示，例如要返回音频的时候输出“[音频]”，程序会切换输出目标，从UI切换到标准输出，在输出完整网址之后，程序会自动提取里面的http：//网址下载音频同时重命名为.mp3格式（因为自动下载的音频会是bin格式，图片不需要进行这部处理）会下载到运行程序的同级目录下的/downloads文件夹（如果没有则自行创建），然后返回一个▶播放按钮，点击可以操控播放与暂停，

Dify平台内部的搭建流程：
一、
1.如果已挂了梯子，可以试着去用联机官网
2.没有梯子的话，官网会非常慢，用docker把dify部署在本地，搭建完成之后导出dsl，上传到官网后再调API
注：本地部署的Agent不能被调用API

二、
我搭建的dsl也上传到github了，大概就是每个环节可以选择这个环节的AI负责接受的输入和将会有的输出，像流水线一样，用户进行输入之后，沿着整条线路，一个AI一个AI走下去，最后到输出
Dify使用首先要去配置自己的模型，先要在dify上安装各种东西，比如模型配置、工具插件
模型下载后去设置--模型里面配置，工具在用的时候配置即可


